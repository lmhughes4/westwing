Figured out how to keep the graphs separate while I compute the
transitive closure.  The selectors and the engine need to keep two
lists of nodes, one for each graph.  This allows the closure to only
copy the nodes and dependencies that will make up the closure.

But I have another problem.  What if class =A= depends
on class =B=, and method =foo()= of
=B= depends on class =C=.  When I traverse the
graph to compute the closure, is it reasonable to visit features of
classes for additional dependencies?  Does =A= transitively
depend on =C= in this case?.  At runtime, it would only if
=foo()= is called as a result of interactions on with
=A=.  If that were the case, the graph would have a path
from some feature of =A= to =foo()= anyway, so
maybe the transitive closure engine doesn't need to go the extra
distance.  I'll think about it some more.
