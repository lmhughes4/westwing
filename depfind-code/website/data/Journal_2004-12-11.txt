Figured out how to detect if a file has changed since it was last
extracted.  I'll use the decorator pattern to wrap the
=ClassfileLoaderDispatcher= of the
=ClassfileLoader= with a decorator that will remember the
modification date of files and instruct the loader to ignore files that
have not been modified.  By using a decorator, I don't have to change
any interfaces and I get to intercept the call to the real dispatcher
before it gets made.  Other solutions, like a common super class for
dispatchers, had the problem that the subclass method was being called
first.  This would necessitate some kind of communication between the
subclass and its superclass to get the new behavior.  A decorator is a
simpler, more elegant solution.

This will not go in the 1.1.0 release, but most likely the very
next one.
