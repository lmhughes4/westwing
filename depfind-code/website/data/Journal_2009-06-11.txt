One user asked:

    i have a project P that contains in some package Z a class C.
    I want to know all of C's dependencies....

If all you want is C's direct dependencies, you can get them from analyzing the
compiled code in =C.class=.  If you want the transitive closure, you sill need
to analyze all the classes along the way too.  You can point Dependency Finder
to a folder and it will scan it and all its subfolders for possible Java code,
be it in JAR files, zip files, or loose =.class= files.

Here is how you would do it using the CLI.  Start by extracting all dependencies
for project P and saving them in =df.xml=.  You can add third party JARs to the
command if you want to drill into their dependencies too.

    % cd [to P's output directory]
    % DependencyExtractor -xml -out df.xml . [add third party JARs too]

Then, reduce all the dependencies in =df.xml= to class-to-class dependencies and
save them to =c2c.df.xml=.

    % c2c -xml -out c2c.df.xml df.xml

Now, use =DependencyClosure= to list the first and second degree dependencies
from =Z.C= in the graph in =c2c.df.xml=.  "Inbounds" are classes that depend on
=Z.C= whereas "outbounds" are classes that =Z.C= depends upon.

    % DependencyClosure c2c.df.xml -class-start-includes /Z.C/ -maximum-inbound-depth 0 -maximum-outbound-depth 1
    % DependencyClosure c2c.df.xml -class-start-includes /Z.C/ -maximum-inbound-depth 0 -maximum-outbound-depth 2

If you want to use the GUI instead, use the "Closure" tab and the
=File&nbsp;&gt;&gt;&nbsp;Closure= menu command.  First, use
=File&nbsp;&gt;&gt;&nbsp;Extract= to extract dependencies for project P.  Then
select the "Closure" tab.  In the "Select programming elements" group of
controls, check "classes" and put =/Z.C/= in the "including" box.  In the "Show
dependencies (stop for closure), select "classes" but leave the textboxes empty.
Set "Follow inbounds" to 0 and set "Follow outbounds" to 1 to first degree or 2
for second degree dependencies.  Click =File&nbsp;&gt;&gt;&nbsp;Closure= and
see the results in the large results area.
