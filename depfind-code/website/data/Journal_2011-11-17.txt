Someone opened a bug about reporting line numbers as part of dependency graphs,
[[https://sourceforge.net/tracker/?func%3Ddetail&aid%3D3438741&group_id%3D43305&atid%3D435884][bug 3438741]].
Their arguments are that 1) why not use it when it's there and 2) other tools
can pinpoint statements, so why can't Dependency Finder?

So I tried to clarify my reasons in the user's manual.  I'm fairly limited by
relying only on compiled code and the information that's there.  Line number
information, when available, is only for methods and not for fields or classes.
Implicit return statements and constructors can throw off line number
information, making it harder to really trust them.  Other tools, aside from
exception stacktraces, typically work off of the source code and build their own
parse tree, giving them access to the entire code.

I have been tempted for some time to gather information per dependency, such as
the number of times a given dependency is repeated, or possibly what line number
it occurs on.  But for that, I would need an new object to model the dependency,
and that would augment the memory footprint.  Right now, dependencies are just
=Node= references in =Map= instances, keeping things small.  But my merging
together all copies of a dependency, it becomes impossible to report specifics.
