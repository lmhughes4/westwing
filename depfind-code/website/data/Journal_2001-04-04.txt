I adjusted =JarJarDiff= so that when it detects a
feature that has been removed, it looks in the superclasses of
the class for a matching signature or proper visibility.  This
can happen when refactoring pushes a method up the inheritance
tree.  The method is no longer in the class, but it can still
be visible if it was declared =public= or
=protected=.  The XML node gets a new attribute to
indicate that a removed feature is now inherited.  The XSL
stylesheet can then choose to ignore the removed feature, if it
wants to.

I've added a tool called =DiffToInheritanceChange=
that lists interfaces and classes whose =extends=
or =implements= clause have changed.

I need to redo the packaging and add documentation.
