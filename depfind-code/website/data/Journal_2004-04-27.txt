The new =OOMetrics= on that production code and it still
took 4 hours, but at least it worked and stayed under the 500MB heap
size.  I still need to figure out what it is taking so long.  Im
tempted to try a custom version of =MetricsGatherer= that
only deals with dependencies.

The metrics configuration had some errors in it, so I mapped it
first to verify where each piece of data came from, and then entered a
new, much simpler version.

Had to adjust =StatisticalMeasurement= so it bases its
empty status on that of the measurements it monitors.  Otherwise it
would say it was not empty when it was monitoring a bunch of empty
measurements in submetrics.

=MetricsGatherer= does not track dependencies on fields
directly, but rather only the class they are part of.  In the context
of this latest work, this means it cannot detect dependencies on
deprecated fields.  Maybe it is not such a big deal, since it will
never be able to track dependencies on fields of primitive types (int,
float, String, etc.) anyway because they are inlined by the
compiler.
