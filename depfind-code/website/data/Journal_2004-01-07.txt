Researched how inherited methods are represented in compiled code.
Method access is resolved based on the type of the object reference
through which the call is made.  In the case of a concrete class
calling its inherited methods, it does so against the =this=
implicit variable which is typed to the concrete class itself.  Hence,
all the dependencies are to the concrete versions of the methods.

Here, JDK 1.3 and JDK 1.4 differ slightly.  In JDK 1.3, the
compiler would resolve method calls to where the methods are defined in
the inheritance hierarchy.  In JDK 1.4, the calls are resolved to the
lowest point in the inheritance hierarchy.  This allows redefinition of
the method in subsequent versions of subclasses, where appropriate.
With the JDK 1.3 compiled class, it would have to be recompiled to
benefit from the new definitions.

_Look to [[2004-02-03]] for an example_.

Someone is having trouble deploying the web application in Tomcat
5.0.  I will have to research this further.
