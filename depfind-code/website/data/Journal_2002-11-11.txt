I have been catching up on graph data structures and their
operations by reading my old college textbooks again.  I was
pleased to see that my implementation of dependency graphs was
not too far from implementations they discuss in the book.  I
was also pleased to see that =TransitiveClosure= uses
a depth-first search algorithm, but the breadth-first search
algorithm in the book is more in tune with what the class is
trying to do.  I will write a breath-first class when I get a
chance.

The book also has an algorithm for finding a path between two
_vertices_ (nodes) in a graph.  I will modify it to find
paths between two groups of vertices.

Before I forget, the books are:

    * "[[http://www.amazon.com/exec/obidos/ASIN/067339736X/qid%3D1037115131/sr%3D11-1/ref%3Dsr%5F11%5F1/002-8674524-2273608][Data Structures and Their Algorithms]]" by Harry R. Lewis and Larry Denenberg
    * "[[http://www.amazon.com/exec/obidos/tg/detail/-/020130564X/qid%3D1037115784/sr%3D1-1/ref%3Dsr%5F1%5F1/002-8674524-2273608?v%3Dglance&s%3Dbooks][Data Structures in Java]]" by Thomas A. Standish
    * "[[http://www.amazon.com/exec/obidos/tg/detail/-/0201072564/qid%3D1037115856/sr%3D1-1/ref%3Dsr%5F1%5F1/002-8674524-2273608?v%3Dglance&s%3Dbooks][Data Structure Techniques]]" by Thomas A. Standish
    * "Algorithmique: conception et analyse" by Giles Brassard and Paul Bratley

This last one was written by teachers at the
[[http://www.iro.umontreal.ca/?lang=en][Universit&eacute; de Montr&eacute;al]],
where I went to school.
