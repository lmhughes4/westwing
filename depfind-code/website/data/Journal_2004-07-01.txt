I realized that my approach to combining regular-expression-based
and collection-based selection criteria is flawed.  Each one verifies
that a given node matches its _include_ terms and does not match
its _exclude_ terms.  That is, it satisfies the boolean
expression:

    (include && !exclude)

But if I combine two criteria with an =AND=, I get:

    (include1 && !exclude1) && (include2 && !exclude2)

That is, the node must match both _includes_ and neither
_excludes_.  What I want, is for the node to match either
_includes_, so I might try combining criteria with an
=OR=:

    (include1 && !exclude1) || (include2 && !exclude2)

But this fails to ensure that the node matches neither
_excludes_.  What I really need is:

    (include1 || include2) && (!exclude1 && !exclude2)

That is, I want it to match either _includes_ but none of the
_excludes_.  To do this, I will need to split the current criteria
classes between _include_ and _exclude_ classes.  I will
also need a =NotCompositeSelectionCriteria=.
