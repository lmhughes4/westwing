Someone tried to run a dependency query with an exclusion list that
had over 10,000 regular expressions!  On a sizeable codebase, the whole
thing took about 13 hours.  They dug around a bit and found that
=Perl5Util= only caches 20 regular expressions at a time by
default.  Their query was taking forever because the ORO engine was
constantly recompiling regular expressions.  They entered
[[http://sourceforge.net/tracker/index.php?func%3Ddetail&aid%3D825582&group_id%3D43305&atid%3D435887][Feature Request 825582]]
at SourceForge.net to request some way to adjust the caching
configuration for =Perl5Util=.

I added a =-version= switch to most CLI tools.  It
prints version information from the JAR file's manifest and then exits
the tool.

I have a problem with some of the tools that require some mandatory
switches, such as =ClassClassDiff= and
=JarJarDiff=.  The command-line parser throws an exception
when the mandatory switches are missing, therefore bypassing any
further processing.  Right now, I can't do anything about it and the
user must provide the mandatory switches to see the version output.  I
see one possible way to handle it.  The parser could throw a different
type of exception when mandatory switches are missing.  The caller
could catch the exception and still inspect the command-line for the
=-version= switch.  If it is present, the caller could then
print version data instead of usage data.

For the GUI, I want to use an "About ..." box in the menu bar.  I
will look at the code in JUnit for "inspiration".
