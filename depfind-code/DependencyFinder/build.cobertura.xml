<project name="Cobertura" default="all" basedir=".">

    <description>
        Code coverage with Cobertura for Dependency Finder
    </description>

    <property environment="env"/>

    <path id="cobertura.classpath" >
        <fileset dir="${env.COBERTURA_HOME}">
            <include name="cobertura.jar"/>
            <include name="lib/**/*.jar"/>
        </fileset>
    </path>

    <taskdef resource="tasks.properties" classpathref="cobertura.classpath"/>

    <target name="init">
        <!-- root directory for the example source code: -->
        <property name="src.dir" value="src"/>
        <property name="tests.dir" value="tests"/>
        <property name="fit.dir" value="fit"/>

        <!-- javac class output directory: -->
        <property name="out.dir" value="classes"/>
        <mkdir dir="${out.dir}"/>

        <!-- class coverage output directory: -->
        <property name="coverage.dir" value="cobertura"/>
        <mkdir dir="${coverage.dir}"/>

        <!-- Cobertura instr class output directory: -->
        <property name="out.instr.dir" value="${coverage.dir}/outinstr"/>
        <mkdir dir="${out.instr.dir}"/>

        <!-- class coverage output directory: -->
        <property name="reports.dir" value="reports"/>
        <property name="cobertura.reports.dir" value="${reports.dir}/cobertura"/>
        <mkdir dir="${cobertura.reports.dir}"/>

        <path id="run.classpath">
            <pathelement location="${out.dir}"/>
            <pathelement location="classes"/>
            <fileset dir="lib">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${env.JUNIT_HOME}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${env.JMOCK_HOME}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${env.CATALINA_HOME}">
                <include name="bin/*.jar"/>
                <include name="lib/*.jar"/>
            </fileset>
            <fileset dir="${env.WEBWORK_HOME}">
                <include name="webwork-*.jar"/>
                <exclude name="webwork-src*.jar"/>
                <include name="lib/default/*.jar"/>
            </fileset>
            <pathelement location="${env.FITLIBRARY_HOME}/fitlibraryRunner.jar"/>
            <fileset dir="${env.HTTPUNIT_HOME}">
                <include name="**/jars/*.jar"/>
                <include name="**/lib/*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="tests.compile">
        <ant antfile="build.test.xml" target="compile" inheritAll="false"/>
    </target>

    <target name="tests.clean">
        <ant antfile="build.test.xml" target="clean" inheritAll="false"/>
    </target>

    <target name="all" depends="clean, instrument, run, report"
            description="Makes a clean compile and runs code coverage analysis"/>

    <target name="clean" depends="init, tests.clean"
            description="Removes all produced files">
        <delete dir="${coverage.dir}"
                includeEmptyDirs="true"
                verbose="true"/>
        <delete dir="${cobertura.reports.dir}"
                includeEmptyDirs="true"
                verbose="true"/>
    </target>

    <target name="instrument" depends="init, tests.compile"
            description="Instruments the bytecode">
        <cobertura-instrument datafile="${coverage.dir}/cobertura.ser"
                              todir="${out.instr.dir}">
            <includeClasses regex="com.jeantessier.*"/>
            <instrumentationClasspath>
                <path refid="run.classpath"/>
            </instrumentationClasspath>
        </cobertura-instrument>
    </target>

    <target name="run" depends="init"
            description="Runs the tests">
        <junit fork="true">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         value="${coverage.dir}/cobertura.ser"/>
            <formatter type="plain" usefile="no"/>
            <test name="TestAll"/>
            <classpath>
                <pathelement location="${out.instr.dir}"/>
                <path refid="run.classpath"/>
                <path refid="cobertura.classpath"/>
            </classpath>
        </junit>

        <junit fork="true">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         value="${coverage.dir}/cobertura.ser"/>
            <formatter type="plain" usefile="no"/>
            <test name="com.jeantessier.fit.FitTestSuite"/>
            <classpath>
                <pathelement location="${out.instr.dir}"/>
                <path refid="run.classpath"/>
                <path refid="cobertura.classpath"/>
            </classpath>
        </junit>
    </target>

    <target name="report" depends="init"
            description="Produces the coverage reports">
        <cobertura-report datafile="${coverage.dir}/cobertura.ser"
                          format="html"
                          destdir="${cobertura.reports.dir}">
            <fileset dir="${src.dir}"/>
            <fileset dir="${tests.dir}"/>
        </cobertura-report>
    </target>

</project>
